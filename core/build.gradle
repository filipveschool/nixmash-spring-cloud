sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDir('src/main/resources')
    }
    test {
        java.srcDir('src/test/java')
    }
}

configurations {
    testOutput
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
//	compile 'org.springframework.boot:spring-boot-starter-security'

    compile 'com.github.slugify:slugify:2.1.5'
    compile 'org.hibernate:hibernate-java8:5.2.10.Final'
    compile("org.springframework.boot:spring-boot-starter-social-twitter")
    compile("org.springframework.boot:spring-boot-starter-social-facebook")
    compile("org.springframework.social:spring-social-security:1.1.4.RELEASE")
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0.pr3'

    runtime 'com.h2database:h2'
    runtime 'mysql:mysql-connector-java'

    testOutput sourceSets.test.output
}